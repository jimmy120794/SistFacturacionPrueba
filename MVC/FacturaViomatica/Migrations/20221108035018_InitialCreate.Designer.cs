// <auto-generated />
using System;
using FacturaViomatica.Models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FacturaViomatica.Migrations
{
    [DbContext(typeof(FacturacionContext))]
    [Migration("20221108035018_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FacturaViomatica.Models.DB.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DirEmpresa")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("dir_empresa");

                    b.Property<string>("Empresa")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("empresa");

                    b.Property<string>("Nombre")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nombre");

                    b.Property<string>("TelEmpresa")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("tel_empresa");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("FacturaViomatica.Models.DB.FacturaCabecera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<DateTime>("FechaVence")
                        .HasColumnType("date")
                        .HasColumnName("fecha_vence");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Factura_cabecera", (string)null);
                });

            modelBuilder.Entity("FacturaViomatica.Models.DB.FacturaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdFactCab")
                        .HasColumnType("int")
                        .HasColumnName("idFactCab");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.HasKey("Id");

                    b.HasIndex("IdFactCab");

                    b.HasIndex("IdProducto");

                    b.ToTable("Factura_detalle", (string)null);
                });

            modelBuilder.Entity("FacturaViomatica.Models.DB.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("money")
                        .HasColumnName("precio");

                    b.HasKey("Id");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("FacturaViomatica.Models.DB.FacturaCabecera", b =>
                {
                    b.HasOne("FacturaViomatica.Models.DB.Cliente", "IdClienteNavigation")
                        .WithMany("FacturaCabeceras")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("fk_Cliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("FacturaViomatica.Models.DB.FacturaDetalle", b =>
                {
                    b.HasOne("FacturaViomatica.Models.DB.FacturaCabecera", "IdFactCabNavigation")
                        .WithMany("FacturaDetalles")
                        .HasForeignKey("IdFactCab")
                        .IsRequired()
                        .HasConstraintName("fk_Factura_cabecera");

                    b.HasOne("FacturaViomatica.Models.DB.Producto", "IdProductoNavigation")
                        .WithMany("FacturaDetalles")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("fk_Producto");

                    b.Navigation("IdFactCabNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("FacturaViomatica.Models.DB.Cliente", b =>
                {
                    b.Navigation("FacturaCabeceras");
                });

            modelBuilder.Entity("FacturaViomatica.Models.DB.FacturaCabecera", b =>
                {
                    b.Navigation("FacturaDetalles");
                });

            modelBuilder.Entity("FacturaViomatica.Models.DB.Producto", b =>
                {
                    b.Navigation("FacturaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
